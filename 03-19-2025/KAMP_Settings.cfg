[include ./CustomMacros/*]

[pause_resume]
recover_velocity: 700

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

  [gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float %}
  {% set y_park = printer.toolhead.axis_maximum.y|float %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro M600]
gcode:
    PAUSE


[gcode_macro UNLOAD_FILAMENT]
gcode:
  M117 Filament unloading
  G91
  G92 E0
  G1  E5 F300
  G92 E0
  G1  E-80 F1200
  G92 E0
  G90

[gcode_macro LOAD_FILAMENT]
gcode:
  M117 Filament loading
  G91
  G92 E0
  G1  E75 F120
  G92 E0
  G90

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    M104 S{EXTRUDER_TEMP - 50} #set hotend temperature
    M140 S{BED_TEMP} #set bed temperature
    G28 ;Home
    BED_MESH_CALIBRATE
    M190 S{BED_TEMP} #wait for bed temperature
    M109 S{EXTRUDER_TEMP} #wait for hotend temperature
    BED_MESH_PROFILE SAVE=Bed
    BED_MESH_PROFILE LOAD=Bed
    G92 E0 ;Reset Extruder
    #G1 Z8.0 F3000 ;Move Z Axis up
    #G1 X115.4 Y4 Z0.28 F5000.0 ;Move to start position
    Smart_Park
    Line_Purge
    #G1 X10.4 Y4 Z0.28 F1500.0 E30 ;Draw the purge line
    #G1 Z2.0 F3000 ;Move Z Axis up
    G92 E0  ;Reset Extruder
    G1 F2400 E-0.8

[gcode_macro END_PRINT]
gcode:
    SET_VELOCITY_LIMIT ACCEL=4000
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G1 X0 Y230 E-3 F10000
    G91
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X0 Y220 ;Present print

[pause_resume]
recover_velocity: 700

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float %}
  {% set y_park = printer.toolhead.axis_maximum.y|float %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    #SET_PIN PIN=caselight VALUE=0       ; turn case light off

[gcode_macro SCREWS_TRIM]
gcode:
    G28
    SCREWS_TILT_CALCULATE
    G90
    G1 x+115 F6000

[gcode_macro PID_CALIBRATE_HEATER]
description: Calibrate the extruder PID with a specified target temperature
gcode:
    {% set target = params.Target_Temp|default(200)|int %}
    PID_CALIBRATE HEATER=extruder TARGET={target}

[gcode_macro man_LINE_PURGE]
description: A purge macro that adapts to be near your actual printed objects
gcode:
  # Get relevant printer params
  {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}

  G28
  M104 S230
  M190 S60
  
  G92 E0                             # Reset extruder
  G0 F{travel_speed}                 # Set travel speed
  G90                                # Absolute positioning
  G0 X15 Y-8                         # Move to purge position
  G0 Z0.8                            # Move to purge Z height
  M83                                # Relative extrusion mode
  G1 Y{-8 + 30} E30 F144             # Purge line
  G1 E-.5 F2100                      # Retract
  G0 Y{-8 + 30 + 10} F{travel_speed} # Rapid move to break string
  G92 E0                             # Reset extruder distance
  M82                                # Absolute extrusion mode
  G0 Z{0.8 * 2} F144                 # Z hop


[gcode_macro HOLD_TEMPERATURES]
description: Set extruder and bed to their current temperatures
gcode:
    # Set extruder to its current temperature
    M104 S{printer.extruder.temperature}
    # Set bed to its current temperature
    M140 S{printer.heater_bed.temperature}